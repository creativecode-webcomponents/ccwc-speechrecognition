{"version":3,"sources":["ccwc-speechrecognition.es6"],"names":[],"mappings":"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","file":"ccwc-speechrecognition.js","sourcesContent":["class CCWCSpeechRecognition extends HTMLElement {\n    setProperties() {\n        /** smart blend of final transcript + interim results */\n        this.transcript = '';\n\n        /** command/callbacks to listen for and throw events on */\n        this.commands = [];\n\n        /** if speech shuts down, should we start back up */\n        this.keepAlive = false;\n\n        /** running tally of interim results */\n        this.interimTranscript = \"\";\n\n        /** running tally of final transcript */\n        this.finalTranscript = \"\";\n\n        /** is running */\n        this.isRunning = false;\n    };\n\n    /**\n     * start speech recognition\n     */\n     start() {\n        this.speech.start();\n        this.isRunning = true;\n        this.setAttribute('listening', true);\n\n        var event = new CustomEvent('speechstart');\n        this.dispatchEvent(event);\n    };\n\n    /**\n     * stop speech recognition\n     */\n    stop() {\n        this.speech.stop();\n        this.isRunning = false;\n        this.removeAttribute('listening');\n        var event = new CustomEvent('speechstop');\n        this.dispatchEvent(event);\n    };\n\n    /**\n     * toggle speech recognition\n     */\n    toggle() {\n        if (this.isRunning) {\n            this.stop();\n        } else {\n            this.start();\n        }\n    };\n\n    /**\n     * on speech result event from web speech API\n     * @param event\n     */\n     onSpeechResult(event) {\n        console.log(event)\n        var interimTranscript = '';\n        if (event.results[event.results.length-1].isFinal) {\n            this.finalTranscript = event.results[event.results.length-1][0].transcript;\n            this.transcript += this.finalTranscript;\n        } else {\n            interimTranscript = event.results[event.results.length-1][0].transcript;\n        }\n\n        if (this.resultsText) {\n            this.resultsText.innerText = this.transcript + interimTranscript;\n        }\n\n        var event = new CustomEvent('speechresult', { detail: {\n            results: this.transcript + interimTranscript,\n            final: this.finalTranscript,\n            interim: this.interimTranscript,\n            isFinal: event.results[event.results.length-1].isFinal }});\n        this.dispatchEvent(event);\n\n        for (var command in this.commands) {\n            for (var word in this.commands[command].words) {\n                if (this.finalTranscript.toLowerCase().indexOf(this.commands[command].words[word].toLowerCase()) != -1) {\n                    // cut the command leaving the freeform words\n                    var w = this.commands[command].words[word];\n                    var ftransIndex = this.finalTranscript.indexOf(w);\n                    var itransIndex = this.interimTranscript.indexOf(w);\n                    this.finalTranscript = this.finalTranscript.substr(0, ftransIndex) + this.finalTranscript.substr(ftransIndex + w.length, this.finalTranscript.length);\n                    this.interimTranscript = this.interimTranscript.substr(0, ftransIndex) + this.interimTranscript.substr(ftransIndex + w.length, this.interimTranscript.length);\n\n                    this.commands[command].command.apply(this, [{ \"word\" : w, \"transcript\": this.finalTranscript }]);\n                    this.finalTranscript = \"\";\n                    this.interimTranscript = \"\";\n                }\n            }\n        }\n    };\n\n    /**\n     * add command\n     * @param word\n     * @param command/function\n     */\n    addCommand(words, command) {\n        if ( typeof(words) === \"string\" ) {\n            words = [words];\n        }\n        this.commands.push( {\"words\": words, \"command\": command } );\n    };\n\n    /**\n     * clear commands to listen for\n     */\n    clearCommands() {\n        this.commands = [];\n    };\n\n    /**\n     * on speech error event from web speech API\n     * @param event\n     */\n    onSpeechError(event) {\n        this.dispatchEvent(event);\n    };\n\n    /**\n     * on speech end event, from the web speech API\n     * @param event\n     */\n    onSpeechEnd(event) {\n        if (this.keepAlive) {\n            this.speech.start();\n        } else {\n            this.isRunning = false;\n            this.removeAttribute('listening');\n            this.dispatchEvent(event);\n        }\n    };\n\n\n    // Fires when an instance was removed from the document.\n    detachedCallback() {};\n\n    // Fires when an attribute was added, removed, or updated.\n    attributeChangedCallback(attr, oldVal, newVal) {};\n\n    /**\n     * parse attributes on element\n     */\n    parseAttributes() {\n        if (this.hasAttribute('keepAlive')) {\n            this.keepAlive = true;\n        }\n    };\n\n\n    // Fires when an instance of the element is created.\n    createdCallback() {\n        this.setProperties();\n        this.parseAttributes();\n\n        this.speech = new webkitSpeechRecognition();\n        this.speech.continuous = true;\n        this.speech.interimResults = true;\n        this.speech.onresult = (event) => { this.onSpeechResult(event) };\n        this.speech.onend = (event) => { this.onSpeechEnd(event) };\n        this.speech.onerror = (event) => { this.onSpeechError(event) };\n\n        this.toggleSpeechButton = this.querySelector('.toggle-speech');\n        this.startSpeechButton = this.querySelector('.start-speech');\n        this.stopSpeechButton = this.querySelector('.stop-speech');\n        this.resultsText = this.querySelector('.results-text');\n\n        if (this.toggleSpeechButton) {\n            this.toggleSpeechButton.addEventListener('click', () => this.toggle());\n        }\n        if (this.startSpeechButton) {\n            this.startSpeechButton.addEventListener('click', () => this.start());\n        }\n        if (this.stopSpeechButton) {\n            this.stopSpeechButton.addEventListener('click', () => this.stop());\n        }\n\n    };\n\n    // Fires when an instance was inserted into the document.\n    attachedCallback() {};\n\n}\n\nCCWCSpeechRecognition.prototype.owner = (document._currentScript || document.currentScript).ownerDocument;\ndocument.registerElement('ccwc-speechrecognition', CCWCSpeechRecognition);"],"sourceRoot":"/source/"}